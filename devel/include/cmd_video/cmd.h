// Generated by gencpp from file cmd_video/cmd.msg
// DO NOT EDIT!


#ifndef CMD_VIDEO_MESSAGE_CMD_H
#define CMD_VIDEO_MESSAGE_CMD_H

#include <ros/service_traits.h>


#include <cmd_video/cmdRequest.h>
#include <cmd_video/cmdResponse.h>


namespace cmd_video
{

struct cmd
{

typedef cmdRequest Request;
typedef cmdResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct cmd
} // namespace cmd_video


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::cmd_video::cmd > {
  static const char* value()
  {
    return "fb3b298255840e179b7df41870a2c158";
  }

  static const char* value(const ::cmd_video::cmd&) { return value(); }
};

template<>
struct DataType< ::cmd_video::cmd > {
  static const char* value()
  {
    return "cmd_video/cmd";
  }

  static const char* value(const ::cmd_video::cmd&) { return value(); }
};


// service_traits::MD5Sum< ::cmd_video::cmdRequest> should match
// service_traits::MD5Sum< ::cmd_video::cmd >
template<>
struct MD5Sum< ::cmd_video::cmdRequest>
{
  static const char* value()
  {
    return MD5Sum< ::cmd_video::cmd >::value();
  }
  static const char* value(const ::cmd_video::cmdRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::cmd_video::cmdRequest> should match
// service_traits::DataType< ::cmd_video::cmd >
template<>
struct DataType< ::cmd_video::cmdRequest>
{
  static const char* value()
  {
    return DataType< ::cmd_video::cmd >::value();
  }
  static const char* value(const ::cmd_video::cmdRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::cmd_video::cmdResponse> should match
// service_traits::MD5Sum< ::cmd_video::cmd >
template<>
struct MD5Sum< ::cmd_video::cmdResponse>
{
  static const char* value()
  {
    return MD5Sum< ::cmd_video::cmd >::value();
  }
  static const char* value(const ::cmd_video::cmdResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::cmd_video::cmdResponse> should match
// service_traits::DataType< ::cmd_video::cmd >
template<>
struct DataType< ::cmd_video::cmdResponse>
{
  static const char* value()
  {
    return DataType< ::cmd_video::cmd >::value();
  }
  static const char* value(const ::cmd_video::cmdResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CMD_VIDEO_MESSAGE_CMD_H
